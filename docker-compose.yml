version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: spice-db
    environment:
      POSTGRES_USER: spice_user
      POSTGRES_PASSWORD: spice_password
      POSTGRES_DB: spice_encyclopedia
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spice_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for sessions
  redis:
    image: redis:7-alpine
    container_name: spice-redis
    ports:
      - "6379:6379"
    networks:
      - spice-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Monolithic)
  backend:
    build:
      context: ./backend-monolith
      dockerfile: Dockerfile
    container_name: spice-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://spice_user:spice_password@postgres:5432/spice_encyclopedia
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-jwt-refresh-secret-key}
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - spice-network
    volumes:
      - ./backend-monolith/uploads:/app/uploads
    command: sh -c "npx prisma migrate deploy && npm start"

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spice-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - spice-network

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: spice-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - spice-network
    profiles:
      - production

networks:
  spice-network:
